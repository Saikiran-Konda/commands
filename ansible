Ansible :
  automation tool, or platform, used for IT tasks such as configuration management, application deployment, intraservice orchestration, and provisioning.

Ansible module:
  Module is a re-usable, standalnoe script it can run on locally or remote

what are the loops are availble in ansible
  standard loop
  complex loops
  Do-until loops
  

https://mike42.me/blog/2019-01-the-top-100-ansible-modules
----------------------------------------------------Package Management---------------
- name: Install a list of packages
  yum:
  name:
  - nginx
  - PostgreSQL
  - PostgreSQL-server
  state: present
  
- name: install the latest version of Apache and MariaDB
  dnf:
    name:
    - httpd
    - mariadb-server
  state: the latest
--------------------------------------------------------------------File-------
- name: Change file ownership, group and permissions
  file:
    path: /etc/foo.conf
    owner: foo
    group: foo
    mode: '0644'

- name: Create a directory if it does not exist
  file:
    path: /etc/some_directory
    state: directory
    mode: '0755'
    

------------------------------------------------------------Copy-------
- name: Copy a new "ntp.conf file into place, backing up the original if it differs from the copied version
  copy:
    src: /mine/ntp.conf
    dest: /etc/ntp.conf
    owner: root
    group: root
    mode: '0644'
    backup: yes
 or   
- name: Copy file with owner and permission, using symbolic representation
  copy:
    src: /srv/myfiles/foo.conf
    dest: /etc/foo.conf
    owner: foo
    group: foo
    mode: u=rw,g=r,o=r

-------------------------------------------------------------------------Debug-----------
- name: Write some content in a file /tmp/foo.txt
  copy:
    dest: /tmp/foo.txt
    content: |
      Good Morning!
      Awesome sunshine today.
    register: display_file_content
- name: Debug display_file_content
    debug:
      var: display_file_content
      verbosity: 2

----------------------------------------------------------------Package management-------

- name: install the latest version of Apache and MariaDB
  dnf:
    name:
      - httpd
      - mariadb-server
    state: latest
    
- name: Install a list of packages
  yum:
    name:
      - nginx
      - postgresql
      - postgresql-server
    state: present
    
    --------------------------------------------------------------------------Service--------
- name: Start service foo, based on running process /usr/bin/foo
  service:
    name: foo
    pattern: /usr/bin/foo
    state: started
    
- name: Restart network service for interface eth0
  service:
    name: network
    state: restarted
    args: eth0
    
    
  -----------Lineinfile---------
- name: Ensure SELinux is set to enforcing mode
  lineinfile:
    path: /etc/selinux/config
    regexp: '^SELINUX='
    line: SELINUX=enforcing
    
- name: Ensure SELinux is set to enforcing mode
  lineinfile:
    path: /etc/selinux/config
    regexp: '^SELINUX='
    line: SELINUX=enforcing
    
  ------------------------------------------------------------------Git--------------
  # Example Create git archive from repo
- git:
    repo: https://github.com/ansible/ansible-examples.git
    dest: /src/ansible-examples
    archive: /tmp/ansible-examples.zip
    
- git:
    repo: https://github.com/ansible/ansible-examples.git
    dest: /src/ansible-examples
    separate_git_dir: /src/ansible-examples.git
    
------------------------------------------------------------------------  Cli_command---------------
- name: commit with comment
  cli_config:
    config: set system host-name foo
    commit_comment: this is a test
 
 - name: configurable backup path
  cli_config:
    config: "{{ lookup('template', 'basic/config.j2') }}"
    backup: yes
    backup_options:
      filename: backup.cfg
      dir_path: /home/user
      
  -------------------------------------------------------------------------Archive---------------------
  - name: Compress directory /path/to/foo/ into /path/to/foo.tgz
  archive:
    path: /path/to/foo
    dest: /path/to/foo.tgz
    
 - name: Create a bz2 archive of multiple files, rooted at /path
  archive:
    path:
    - /path/to/foo
    - /path/wong/foo
    dest: /path/file.tar.bz2
    format: bz2
    
    
  ------------------------------------------------------------------------Command----------------------
- name: return motd to registered var
  command: cat /etc/motd
  register: mymotd
  
  
- name: Change the working directory to somedir/ and run the command as db_owner if /path/to/database does not exist.
  command: /usr/bin/make_database.sh db_user db_name
  become: yes
  become_user: db_owner
  args:
    chdir: somedir/
    creates: /path/to/database
